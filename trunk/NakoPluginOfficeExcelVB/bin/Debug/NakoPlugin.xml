<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NakoPlugin</name>
    </assembly>
    <members>
        <member name="T:NakoPlugin.NakoPluginTemplate">
            <summary>
            なでしこプラグインのひな形（これを継承してプラグインを作ると楽）
            </summary>
        </member>
        <member name="T:NakoPlugin.INakoPlugin">
            <summary>
            なでしこプラグインのインターフェイス
            </summary>
        </member>
        <member name="M:NakoPlugin.INakoPlugin.DefineFunction(NakoPlugin.INakoPluginBank)">
            <summary>
            プラグインでなでしこの関数を定義する
            Libnako.NakoAPI.NakoBaseSystem.DefineFunction　に登録例あり
            </summary>
            <param name="bank">このオブジェクトに命令を登録する</param>
        </member>
        <member name="M:NakoPlugin.INakoPlugin.PluginInit(NakoPlugin.INakoInterpreter)">
            <summary>
            アプリ開始時に実行する処理
            </summary>
        </member>
        <member name="M:NakoPlugin.INakoPlugin.PluginFin(NakoPlugin.INakoInterpreter)">
            <summary>
            アプリ終了時に実行する処理(メモリの解放など)
            </summary>
        </member>
        <member name="P:NakoPlugin.INakoPlugin.TargetNakoVersion">
            <summary>
            対応プラグインのバージョン番号 (現在は必ず 2.0 を返すようにする)
            </summary>
        </member>
        <member name="P:NakoPlugin.INakoPlugin.Name">
            <summary>
            プラグインの名前 ( this.GetType().FullName とクラスのフルパスを指定する )
            </summary>
        </member>
        <member name="P:NakoPlugin.INakoPlugin.PluginVersion">
            <summary>
            プラグインのバージョン（任意の値を返すことができる）
            </summary>
        </member>
        <member name="P:NakoPlugin.INakoPlugin.Description">
            <summary>
            プラグインの説明を返す
            </summary>
        </member>
        <member name="P:NakoPlugin.INakoPlugin.Used">
            <summary>
            プラグインが利用されたかどうかを判別する (自動的に設定されるので定義するだけでOK)
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoPluginTemplate._pluginVersion">
            <summary>
            プラグインのバージョン番号
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoPluginTemplate._pluginDescript">
            <summary>
            プラグインの説明
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoPluginTemplate.DefineFunction(NakoPlugin.INakoPluginBank)">
            <summary>
            プラグインでなでしこの関数を定義する
            Libnako.NakoAPI.NakoBaseSystem.DefineFunction　に登録例あり
            </summary>
            <param name="bank">このオブジェクトに命令を登録する</param>
        </member>
        <member name="M:NakoPlugin.NakoPluginTemplate.PluginInit(NakoPlugin.INakoInterpreter)">
            <summary>
            アプリ開始時に実行する処理
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoPluginTemplate.PluginFin(NakoPlugin.INakoInterpreter)">
            <summary>
            アプリ終了時に実行する処理(メモリの解放など)
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoPluginTemplate.TargetNakoVersion">
            <summary>
            対応プラグインのバージョン番号 (現在は必ず 2.0 を返すようにする)
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoPluginTemplate.Name">
            <summary>
            プラグインの名前 ( this.GetType().FullName とクラスのフルパスを指定する )
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoPluginTemplate.PluginVersion">
            <summary>
            プラグインのバージョン（任意の値を返すことができる）
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoPluginTemplate.Description">
            <summary>
            プラグインの説明を返す
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoPluginTemplate.Used">
            <summary>
            プラグインが利用されたかどうかを判別する (自動的に設定されるので定義するだけでOK)
            </summary>
        </member>
        <member name="T:NakoPlugin.NWEnviroment">
            <summary>
            OSや各種環境を判別するクラス
            </summary>
        </member>
        <member name="M:NakoPlugin.NWEnviroment.osVersionStr">
            <summary>
            OSのバージョンを文字列として返す
            </summary>
            <returns>OS名</returns>
        </member>
        <member name="M:NakoPlugin.NWEnviroment.AppendLastPathFlag(System.String)">
            <summary>
            パスの最後に区切り記号(\)を追加する
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="P:NakoPlugin.NWEnviroment.ExePath">
            <summary>
            実行ファイルのパス
            </summary>
        </member>
        <member name="P:NakoPlugin.NWEnviroment.AppPath">
            <summary>
            実行ファイルのあるフォルダのパス
            </summary>
        </member>
        <member name="T:NakoPlugin.NakoVarType">
            <summary>
            なでしこの型を表わすタイプ一覧
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.Void">
            <summary>
            型無し/引数無し
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.Object">
            <summary>
            任意のオブジェクト
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.Int">
            <summary>
            整数(=long)
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.Double">
            <summary>
            浮動小数点数(=double)
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.String">
            <summary>
            文字列
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.Array">
            <summary>
            配列
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.Group">
            <summary>
            グループ
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.UserFunc">
            <summary>
            ユーザー関数
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarType.SystemFunc">
            <summary>
            システム関数(プラグイン関数)
            </summary>
        </member>
        <member name="T:NakoPlugin.INakoFuncCallInfo">
            <summary>
            プラグイン関数呼び出しに使うインターフェイス
            </summary>
            Libnako.JPNCompiler.Functio.NakoFuncCallInfo に本体の定義あり
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.StackPop">
            <summary>
            引数スタックから値を取り出す
            </summary>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.StackPopAsString">
            <summary>
            引数スタックから文字列を取り出す
            </summary>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.StackPopAsInt">
            <summary>
            引数スタックから整数を取り出す
            </summary>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.StackPopAsDouble">
            <summary>
            引数スタックから実数を取り出す
            </summary>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.GetVariable(System.String)">
            <summary>
            インタプリタの変数を取り出す
            </summary>
            <param name="varname"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.SetVariable(System.String,NakoPlugin.NakoVariable)">
            <summary>
            インタプリタに変数を与える
            </summary>
            <param name="varname"></param>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.GetVariableValue(System.String)">
            <summary>
            インタプリタから変数の値を取り出す
            </summary>
            <param name="varname"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.SetVariableValue(System.String,System.Object)">
            <summary>
            インタプリタの変数に値を設定する
            </summary>
            <param name="varname"></param>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.WriteLog(System.String)">
            <summary>
            ログに値を書き込む
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:NakoPlugin.INakoFuncCallInfo.CreateArray">
            <summary>
            配列変数を生成する
            </summary>
            <returns></returns>
        </member>
        <member name="T:NakoPlugin.SysCallDelegate">
            <summary>
            システム関数の型
            </summary>
            <param name="info">インタプリタの情報を受け取る</param>
            <returns></returns>
        </member>
        <member name="T:NakoPlugin.INakoPluginBank">
            <summary>
            プラグインにシステム関数を追加する
            </summary>
            Libnako.NakoAPI.NakoAPIFuncBank に実際の定義がある
        </member>
        <member name="M:NakoPlugin.INakoPluginBank.SetPluginInstance(NakoPlugin.INakoPlugin)">
            <summary>
            関数をシステムに追加する
            </summary>
        </member>
        <member name="M:NakoPlugin.INakoPluginBank.AddFunc(System.String,System.String,NakoPlugin.NakoVarType,NakoPlugin.SysCallDelegate,System.String,System.String)">
            <summary>
            関数を追加する
            </summary>
            <param name="name">関数の名前(日本語)</param>
            <param name="argdef">引数の定義</param>
            <param name="resultType">戻り値の型</param>
            <param name="f">関数本体</param>
            <param name="desc">説明</param>
            <param name="kana">よみがな(アルファベットはそのままで)</param>
        </member>
        <member name="M:NakoPlugin.INakoPluginBank.AddVar(System.String,System.Object,System.String,System.String)">
            <summary>
            変数を追加する
            </summary>
            <param name="name">変数の名前</param>
            <param name="value">変数の初期値</param>
            <param name="desc">変数の説明</param>
            <param name="kana">よみがな(アルファベットはそのままで)</param>
        </member>
        <member name="T:NakoPlugin.INakoInterpreter">
            <summary>
            なでしこインタプリタを表わすインターフェイス
            </summary>
        </member>
        <member name="P:NakoPlugin.INakoInterpreter.InterpreterId">
            <summary>
            インタプリタのID番号
            </summary>
        </member>
        <member name="T:NakoPlugin.NakoPluginRuntimeException">
            <summary>
            プラグイン内の関数によるランタイムエラー
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoPluginRuntimeException.#ctor(System.String)">
            <summary>
            エラーを生成するコンストラクタ
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:NakoPlugin.NakoPluginArgmentException">
            <summary>
            プラグイン内の関数の引数指定が問題のエラー
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoPluginArgmentException.#ctor(System.String)">
            <summary>
            エラーを生成するコンストラクタ
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:NakoPlugin.NakoValueConveter">
            <summary>
            objectの値を変換するコンバーター
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoValueConveter.value">
            <summary>
            内部で使う値
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoValueConveter.#ctor(System.Object)">
            <summary>
            コンストラクタ
            </summary>
            <param name="v"></param>
        </member>
        <member name="M:NakoPlugin.NakoValueConveter.ToInt(System.Object)">
            <summary>
            整数に変換
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoValueConveter.ToLong(System.Object)">
            <summary>
            LONG型に変換
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoValueConveter.ToDouble(System.Object)">
            <summary>
            浮動小数点数に変換
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoValueConveter.ToString(System.Object)">
            <summary>
            文字列に変換
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:NakoPlugin.NakoValueConveter.Value">
            <summary>
            値
            </summary>
        </member>
        <member name="T:NakoPlugin.NakoVariable">
            <summary>
            なでしこの変数を表わすクラス
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVariable._type">
            <summary>
            変数のタイプ(内部で使用する)
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVariable._body">
            <summary>
            変数の値(内部で使用する)
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoVariable.#ctor">
            <summary>
            変数を生成するコンストラクタ
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoVariable.SetBody(System.Object,NakoPlugin.NakoVarType)">
            <summary>
            値と型を明示して設定する
            </summary>
            <param name="value"></param>
            <param name="type"></param>
        </member>
        <member name="M:NakoPlugin.NakoVariable.SetBodyAutoType(System.Object)">
            <summary>
            値の型を自動的に判別し、値と型を設定する
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.NakoVariable.ToString">
            <summary>
            変数の内容を文字列に変換して返す
            </summary>
            <returns></returns>
        </member>
        <member name="P:NakoPlugin.NakoVariable.Type">
            <summary>
            変数のタイプ
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoVariable.Body">
            <summary>
            変数の値
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoVariable.AsInt">
            <summary>
            値を整数として参照する
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoVariable.varNo">
            <summary>
            変数の管理番号
            </summary>
        </member>
        <member name="P:NakoPlugin.NakoVariable.key">
            <summary>
            配列などでキーとして利用される
            </summary>
        </member>
        <member name="T:NakoPlugin.NakoVarArray">
            <summary>
            なでしこの配列型(配列とハッシュを扱える)
            </summary>
        </member>
        <member name="F:NakoPlugin.NakoVarArray.list">
            <summary>
            配列の要素を保持するためのリスト
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.#ctor">
            <summary>
            配列変数を作成する(コンストラクタ)
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetKeys">
            <summary>
            ハッシュのキーを得る
            </summary>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.Clear">
            <summary>
            配列を初期化する
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetVar(System.Int32)">
            <summary>
            配列要素を得る
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetValue(System.Int32)">
            <summary>
            配列要素を得る
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetIndexFromKey(System.String)">
            <summary>
            ハッシュ名からハッシュ番号を得る
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.FindValue(System.Object)">
            <summary>
            値を検索してキー番号を返す
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetVarFromKey(System.String)">
            <summary>
            配列要素を得る
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetVarFromObj(System.Object)">
            <summary>
            配列要素を得る
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetValueFromObj(System.Object)">
            <summary>
            配列要素を得る
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.GetValueFromKey(System.String)">
            <summary>
            配列に値を代入する
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetVar(System.Int32,NakoPlugin.NakoVariable)">
            <summary>
            配列に値を代入する
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetVarFromObj(System.Object,NakoPlugin.NakoVariable)">
            <summary>
            配列(インデックス/ハッシュ)に変数を代入する
            </summary>
            <param name="key">整数 or 文字列でキーを指定</param>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetVarFromKey(System.String,NakoPlugin.NakoVariable)">
            <summary>
            ハッシュに変数を代入する
            </summary>
            <param name="key">文字列でキーを指定</param>
            <param name="var"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetValue(System.Int32,System.Object)">
            <summary>
            配列に変数を代入する
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetValueFromKey(System.String,System.Object)">
            <summary>
            配列変数(ハッシュ)の要素を設定する
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetValuesFromString(System.String)">
            <summary>
            文字列を改行で区切って配列変数に変換する
            </summary>
            <param name="str"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.SetValuesFromStrings(System.String[])">
            <summary>
            string[]を配列変数に変換して代入する
            </summary>
            <param name="strings"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.RemoveAt(System.Int32)">
            <summary>
            要素を削除
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.Add(NakoPlugin.NakoVariable)">
            <summary>
            配列要素を追加する
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.Pop">
            <summary>
            末尾の要素を切り取って返す
            </summary>
            <returns></returns>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.Insert(System.Int32,NakoPlugin.NakoVariable)">
            <summary>
            配列に要素を挿入する
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.Reverse">
            <summary>
            配列の要素を反転する
            </summary>
        </member>
        <member name="M:NakoPlugin.NakoVarArray.ToString">
            <summary>
            配列の値を文字列に変換して出力する
            </summary>
            <returns></returns>
        </member>
        <member name="P:NakoPlugin.NakoVarArray.Count">
            <summary>
            配列の要素数を得る
            </summary>
        </member>
        <member name="T:NakoPlugin.StrUnit">
            <summary>
            文字コードの判定など、文字列処理に便利なクラス
            </summary>
        </member>
        <member name="M:NakoPlugin.StrUnit.GetCode(System.Byte[])">
            <summary>
            文字コードを判別する
            このメソッドは、 http://dobon.net/vb/dotnet/string/detectcode.html より引用しました。感謝!!
            </summary>
            <remarks>
            Jcode.pmのgetcodeメソッドを移植したものです。
            Jcode.pm(http://openlab.ring.gr.jp/Jcode/index-j.html)
            Jcode.pmのCopyright: Copyright 1999-2005 Dan Kogai
            </remarks>
            <param name="bytes">文字コードを調べるデータ</param>
            <returns>適当と思われるEncodingオブジェクト。
            判断できなかった時はnull。</returns>
        </member>
        <member name="M:NakoPlugin.StrUnit.LoadFromFileAutoEnc(System.String)">
            <summary>
            ファイルからテキストを読み込む(文字コードの自動判別付き)
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
    </members>
</doc>
